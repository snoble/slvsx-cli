name: Simple Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v0.1.0)'
        required: true
        default: 'v0.1.0'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            binary_name: slvsx-linux
          - os: macos-latest
            binary_name: slvsx-macos
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Install deps (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y cmake build-essential
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build everything
        run: |
          # Build libslvs
          cd libslvs-static
          mkdir -p build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu)
          cd ../..
          
          # Build slvsx
          export SLVS_LIB_DIR=$PWD/libslvs-static/build
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            cargo build --release --target x86_64-unknown-linux-gnu
            cp target/x86_64-unknown-linux-gnu/release/slvsx ${{ matrix.binary_name }}
          else
            cargo build --release
            cp target/release/slvsx ${{ matrix.binary_name }}
          fi
          
          chmod +x ${{ matrix.binary_name }}
          
          # Test it works
          ./${{ matrix.binary_name }} --version
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: ${{ matrix.binary_name }}
  
  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.version }}
          body: |
            ## ðŸš€ Quick Install
            
            ```bash
            curl -fsSL https://raw.githubusercontent.com/snoble/slvsx-cli/main/install.sh | bash
            ```
            
            ## Manual Download
            - **Linux**: `slvsx-linux` 
            - **macOS**: `slvsx-macos`
            
            ## Usage
            ```bash
            chmod +x slvsx-*
            ./slvsx-linux --version
            
            # Solve geometry
            echo '{"entities":[{"type":"point","id":"p1","at":[0,0,0]}],"constraints":[],"units":"mm"}' | ./slvsx-linux solve -
            ```
          files: |
            slvsx-linux/slvsx-linux
            slvsx-macos/slvsx-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}