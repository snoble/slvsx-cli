name: Docker Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker-build:
    name: Build and Test with Docker
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - name: Build Docker image
        run: |
          docker build -t slvsx-builder .
          
      - name: Extract binary from Docker
        run: |
          # Create container and copy binary out
          docker create --name temp-container slvsx-builder
          
          # First check what's in the container
          echo "Checking container contents:"
          docker run --rm slvsx-builder ls -la /app/target/release/ | head -10
          
          # Copy the binary (ensure we're not copying to existing directory)
          rm -rf ./slvsx-linux ./slvsx-docker-binary 2>/dev/null || true
          docker cp temp-container:/app/target/release/slvsx ./slvsx-docker-binary
          
          # Clean up container
          docker rm temp-container
          
          # Check what we got
          echo "Extracted file info:"
          ls -la ./slvsx-docker-binary
          file ./slvsx-docker-binary
          
          # Rename to expected name
          mv ./slvsx-docker-binary ./slvsx-linux
          
      - name: Test extracted binary
        run: |
          chmod +x ./slvsx-linux
          ./slvsx-linux --version
          ./slvsx-linux capabilities
          
      - name: Verify static linking
        run: |
          echo "Checking binary dependencies:"
          ldd ./slvsx-linux | grep -E "(libstdc|libgcc)" || echo "No libstdc++/libgcc dependencies (good!)"
          echo "Full dependency list:"
          ldd ./slvsx-linux || echo "Fully static binary!"
          file ./slvsx-linux
          
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: slvsx-linux-docker
          path: ./slvsx-linux